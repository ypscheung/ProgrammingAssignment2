x=11
x
getwd()
setwd("~/Coursesa/specdata")
?cor
source("corr")
source("corr.R")
cr <- core("~/Coursesa/specdata",150)
cr <- corr("~/Coursesa/specdata",150)
source("corr.R")
cr <- corr("~/Coursesa/specdata",150)
source("corr.R")
cr <- corr("~/Coursesa/specdata",150)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("~/Coursesa/specdata",150)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("~/Coursesa/specdata",150)
source("corr.R")
cr <- corr("~/Coursesa/specdata",150)
source("corr.R")
cr <- corr("~/Coursesa/specdata",150)
source("corr.R")
cr <- corr("~/Coursesa/specdata",150)
source("corr.R")
cr <- corr("~/Coursesa/specdata",150)
head(cr)
complete(" ", 332)
complete(""~/Coursesa/specdata", 332)
complete("~/Coursesa/specdata", 332)
complete("~/Coursesa/specdata", 1:332)
source("corr.R")
cr <- corr("~/Coursesa/specdata",150)
cr
a <- 0
a <- c(a,2)
a
source("corr.R")
cr <- corr("~/Coursesa/specdata",150)
head(cr)
filename <- "001.csv"
in_data <- read.csv(filename)
good_data <- in_data[complete.cases(in_data), ]
filename <- "002.csv"
in_data <- read.csv(filename)
good_data <- in_data[complete.cases(in_data), ]
out_data <- c(out_data,cor (good_data$sulfate, good_data$nitrate))
out_data <-0
out_data <- c(out_data,cor (good_data$sulfate, good_data$nitrate))
if (nrow(good_data) > threshold) {
out_data <- c(out_data,cor (good_data$sulfate, good_data$nitrate))
}
threshold <-150
if (nrow(good_data) > threshold) {
out_data <- c(out_data,cor (good_data$sulfate, good_data$nitrate))
}
source('~/Coursesa/specdata/corr.R')
threshold <-150
cr <- corr("~/Coursesa/specdata",150)
head(cr)
cr
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
# setwd("~/Coursesa/specdata")
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
setwd(directory)
in_data <- data.frame()
out_data <- 0
for (i in 1:332){
## construct filename
if (i < 10) {
filename <- paste("00",i,".csv", sep ="")
} else if (i < 100){
filename <- paste("0",i,".csv", sep = "")
} else {
filename <- paste(i,".csv", sep = "")
}
## add data from files
in_data <- read.csv(filename)
good_data <- in_data[complete.cases(in_data), ]
out_data <- c(out_data, nrow(good_data))
}
}
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
cr
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
cr
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
cr
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
cr
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
cr
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
cr
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
cr
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
cr
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
cr
head(cr)
summary(cr)
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
summary(cr)
head(cr)
cr <- corr("~/Coursesa/specdata",400)
head(cr)
summary(cr)
cr <- corr("~/Coursesa/specdata",5000)
summary(cr)
length(cr)
cr <- corr("~/Coursesa/specdata)
)
,)
cr <- corr("~/Coursesa/specdata")
summary(cr)
length(cr)
source('~/Coursesa/specdata/corr.R')
source('~/Coursesa/specdata/corr.R')
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata")
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata")
summary(cr)
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata")
summary(cr)
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata")
summary(cr)
cr <- corr("~/Coursesa/specdata",150)
head(cr)
summary(cr)
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
summary(cr)
cr <- corr("~/Coursesa/specdata",400)
summary(cr)
cr <- corr("~/Coursesa/specdata",5000)
summary(cr)
cr <- corr("~/Coursesa/specdata")
summary(cr)
length(cr)
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata")
summary(cr)
cr <- corr("~/Coursesa/specdata",5000)
summary(cr)
cr <- corr("~/Coursesa/specdata",150)
head(cr)
summary(cr)
cr <- corr("~/Coursesa/specdata",400)
head(cr)
summary(cr)
cr <- corr("~/Coursesa/specdata",500)
cr <- corr("~/Coursesa/specdata",5000)
summary(cr)
cr <- corr("~/Coursesa/specdata")
summary(cr)
source('~/Coursesa/specdata/corr.R')
cr <- corr("~/Coursesa/specdata",150)
summary(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
getwd()
setwd("~/")
getwd()
submit()
library swirl()
library swirl
ls
library
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <-lapply(flag, class)
cls_list <-lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vest <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colrs)
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(3,4,5,5,5,6,6)
unique(c(3,4,5,5,5,6,6))
unique_vals(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
library(datasets)
dataset(iris)
datasets(iris)
data(iris)
?iris
summary(iris)
sapply(iris, mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
summary(mtcars)
library(swirl)
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flag$landmass)
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
datasets(iris)
data(iris)
?iris
summary(iris)
lapply(iris,mean)
tapply(iris,iris$Species,mean)
split(iris,iris$Species,mean)
split(iris,iris$Species,drop=TRUE)
lapply(split(iris,iris$Species,drop=TRUE),mena)
lapply(split(iris,iris$Species,drop=TRUE),mean)
lapply(split(iris,iris$Species),mean)
split(iris,iris$Species)
lapply(split(iris,iris$Species),mean)
tapply(split(iris,iris$Species),mean)
s <- split(iris,iris$Species)
summary(s)
head(s)
lapply(s,function(x) colMean(x[,"Sepal.Length"]))
lapply(s,function(x) colMeans(x[,"Sepal.Length"]))
lapply(s,function(x) colMeans(x[,c("Sepal.Length")]))
lapply(s,function(x) colMeans(x[,c("Sepal.Length","Sepal.Width")]))
with(iris, tapply(Sepal.length, species, mean))
with(s, tapply(Sepal.length, species, mean))
stru(s)
str(s)
data(mtcars)
sapply(split(mtcars$mpg,mtars$cyl),mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
mean(mtcars$mpg,mtcars$cyl)
means(mtcars$mpg,mtcars$cyl)
mean(mtcars$mpg,mtcars$cyl)
with(mtcars,tapply(mpg,cyl,mean))
apply(iris[,1:4],2,mean)
setwd("~/GitHub/ProgrammingAssignment2")
?solve()
a <- matrix(c(3,-7,5,2),nrow=2)
a
solve(a)
b <- as.matrix
2/41
7/41
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
makeCasheMatrix(a)
makeCacheMatrix(a)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(a)
setwd("~/Coursesa")
b <- 1:3
source('~/Coursesa/cachevectir.R')
makeVector(b)
cacheman(b)
cachemean(b)
cachemean(makeVector(b))
setwd("~/GitHub/ProgrammingAssignment2")
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(a)
CacheSolve(makeCacheMatrix(a))
cacheSolve(makeCacheMatrix(a))
cacheSolve(makeCacheMatrix(a))
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
?list
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(a)
a
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(a)
makeCacheMatrix(a)
cacheSolve(a)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(a)
cacheSolve(a)
c <-makeCacheMatrix(a)
cacheSolve(c)
solve(a)
cacheSolve(a)
cacheSolve(c)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
c <-makeCacheMatrix(a)
cacheSolve(c)
cacheSolve(c)
